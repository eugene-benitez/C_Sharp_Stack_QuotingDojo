// <auto-generated />
using System;
using C_Sharp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace C_Sharp.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("C_Sharp.Models.Likes", b =>
                {
                    b.Property<int>("LikeID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("QuoteID");

                    b.Property<int>("UserID");

                    b.HasKey("LikeID");

                    b.HasIndex("QuoteID");

                    b.HasIndex("UserID");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("C_Sharp.Models.Quote", b =>
                {
                    b.Property<int>("QuoteID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author")
                        .IsRequired();

                    b.Property<DateTime>("Created_At");

                    b.Property<int>("CreatorID");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.HasKey("QuoteID");

                    b.HasIndex("CreatorID");

                    b.ToTable("Quote");
                });

            modelBuilder.Entity("C_Sharp.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("C_Sharp.Models.Likes", b =>
                {
                    b.HasOne("C_Sharp.Models.Quote", "Quote")
                        .WithMany("Likers")
                        .HasForeignKey("QuoteID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("C_Sharp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("C_Sharp.Models.Quote", b =>
                {
                    b.HasOne("C_Sharp.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
